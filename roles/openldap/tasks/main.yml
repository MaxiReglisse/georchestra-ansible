- name: installing dependencies
  apt: pkg={{ item }} state=installed update_cache=yes
  with_items:
  - sudo
  - git
  - slapd
  - ldap-utils
#  notify: restart slapd

- name: Update /etc/hosts
  lineinfile: dest=/etc/hosts regexp='^127\.0\.0\.1' line='127.0.0.1 localhost' owner=root group=root mode=0644

- name: set hostname in /etc/hosts file
  lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ hostvars[item].ansible_default_ipv4.address }} {{ item }}" state=present
  when: hostvars[item].ansible_default_ipv4.address is defined
  with_items: play_hosts

- name: checkout LDAP files
  tags: git
  git: repo=git://github.com/georchestra/LDAP.git dest=/tmp/LDAP accept_hostkey=yes version={{ openldap_commit }} force=yes

- name: customize bootstrap ldif files
  replace: dest=/tmp/LDAP/georchestra-bootstrap.ldif regexp='dc=georchestra,dc=org' replace={{ openldap_basedn }}

- name: customize root ldif files
  replace: dest=/tmp/LDAP/georchestra-root.ldif regexp='dc=georchestra,dc=org' replace={{ openldap_basedn }}

- name: customize georchestra ldif files
  replace: dest=/tmp/LDAP/georchestra.ldif regexp='dc=georchestra,dc=org' replace={{ openldap_basedn }}

- name: bootstrap the db
  command: sudo ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/LDAP/georchestra-bootstrap.ldif creates=/etc/ldap/slapd.d/cn=config/olcDatabase={2}mdb.ldif

- name: create temporary directory
  shell: mktemp -d
  register: tempdir

- name: temporarly store cleartext admin rootpw
  copy: dest={{ tempdir.stdout }}/admin-georchestra.pass content={{ openldap_rootpw }} mode=0400
  when: tempdir.stdout is defined

- name: check if the root already exists
  command: ldapsearch  -x -b {{ openldap_basedn }} dc=georchestra
  ignore_errors: true
  register: rootdn

- name: create root dn
  command: ldapadd -D {{ openldap_rootdn }} -x -y {{ tempdir.stdout }}/admin-georchestra.pass -f /tmp/LDAP/georchestra-root.ldif
  when: "rootdn.stdout is defined and '# numEntries: 1' not in rootdn.stdout"

- name: check if the testadmin user already exists
  command: ldapsearch  -x -b {{ openldap_basedn }} uid=testadmin
  ignore_errors: true
  register: testadmindn

- name: create tree and users
  command: ldapadd -D {{ openldap_rootdn }} -x -y {{ tempdir.stdout }}/admin-georchestra.pass -f /tmp/LDAP/georchestra.ldif
  when: "testadmindn.stdout is defined and '# numEntries: 1' not in testadmindn.stdout"

- name: recursively purge temp dir
  file: dest={{ tempdir.stdout }} state=absent
  when: tempdir.stdout is defined

- name: set georchestra LDAP
  template: src=ldap.conf.j2 dest=/etc/ldap/ldap.conf
#  notify: restart slapd

- include: saslauth.yml tags=saslauth
